#include <LiquidCrystal.h>
 
int led = 13;
int light1=12;
int light2=11;
int light3=10;
int light4=9;
int light5=8;
int hello=7;
int manual=6;
int led_f=0,light1_f=0,light2_f=0,light3_f=0,light4_f=0;
 String statuss=" ";

 

char inbyte = 0;

 String readString;
void setup() {
 
  Serial.begin(9600);
    pinMode(led, OUTPUT);
    pinMode(light1,OUTPUT);
    pinMode(light2,OUTPUT);
    pinMode(light3,OUTPUT);
    pinMode(light4,OUTPUT);
    pinMode(hello,OUTPUT);
    pinMode(manual,OUTPUT);
  
}
 
void loop() {
    //when serial values have been received this will be true
    while (Serial.available()) {
    delay(10);  //small delay to allow input buffer to fill

    char c = Serial.read();  //gets one byte from serial buffer
    if (c == ',') {
      break;
    }  
    if(c!='x'){
    //breaks out of capture loop to print readstring
    readString += c;
    }
  } //makes the string readString 

   if(readString=="manual mode on"){
    digitalWrite(manual,HIGH);
    digitalWrite(light4,LOW);
         delay(5);
         digitalWrite(light3,LOW);
         delay(5);
         digitalWrite(light2,LOW);
         delay(5);
         digitalWrite(light1,LOW);
         delay(5);
          digitalWrite(led,LOW);
         delay(5);
             digitalWrite(hello,LOW);
    sendAndroidValues("manual mode on");
   }
   else  if(readString=="manual mode off"){
    digitalWrite(manual,LOW);
    sendAndroidValues("manual mode off");
   }
    
    else if (readString =="turn on the front lights"||readString=="lights on"||readString=="switch on the light"||readString=="turn on the lights")
    {
      led_f=1;
      sendAndroidValues("successfully turned on the light sir");
      digitalWrite(led, HIGH);
      digitalWrite(manual,LOW);
    }
    else if (readString =="turn off the front lights"||readString=="lights off"||readString=="switch off the light"||readString=="turn off the lights")
    {
      led_f=0;
      sendAndroidValues("successfully turned off the light sir");
      digitalWrite(led, LOW);
    }
    else if(readString =="turn on the light 1"){
      light1_f=1;
      sendAndroidValues("successfully turned on the light1 sir");
      digitalWrite(light1,HIGH);
      digitalWrite(manual,LOW);
    }
    else if(readString =="turn off the light 1"){
      light1_f=0;
      sendAndroidValues("successfully turned off the light1 sir");
      digitalWrite(light1,LOW);
    }
    else if(readString =="turn on the light 2"){
      light2_f=1;
      sendAndroidValues("successfully turned on the light2 sir");
      digitalWrite(light2,HIGH);
      digitalWrite(manual,LOW);
    }
    else if(readString =="turn off the light 2"){
      light2_f=0;
      sendAndroidValues("successfully turned off the light2 sir");
      digitalWrite(light2,LOW);
    }
      else if(readString =="turn on the light 3"){
        light3_f=1;
      sendAndroidValues("successfully turned on the light3 sir");
      digitalWrite(light3,HIGH);
      digitalWrite(manual,LOW);
    }
    else if(readString =="turn off the light 3"){
      light3_f=0;
      sendAndroidValues("successfully turned off the light2 sir");
      digitalWrite(light3,LOW);
    }
    else if(readString =="turn on the lights for"){
      light4_f=1;
      sendAndroidValues("successfully turned on the light4 sir");
      digitalWrite(light4,HIGH);
      digitalWrite(manual,LOW);
    }
    else if(readString =="turn off the lights for"){
      light4_f=0;
      sendAndroidValues("successfully turned off the light4 sir");
      digitalWrite(light4,LOW);
    }
    else if(readString=="all device on"){
         digitalWrite(light4,HIGH);
         delay(5);
         digitalWrite(light3,HIGH);
         delay(5);
         digitalWrite(light2,HIGH);
         delay(5);
         digitalWrite(light1,HIGH);
         delay(5);
          digitalWrite(led,HIGH);
         delay(5);
          digitalWrite(hello,HIGH);
         delay(5);
         digitalWrite(manual,LOW);
         sendAndroidValues("successfully turned on  all the device");
 led_f=1;
 light1_f=1;
 light2_f=1;
 light3_f=1;
 light4_f=1;
    }
    else if(readString=="all device of"){
         digitalWrite(light4,LOW);
         delay(5);
         digitalWrite(light3,LOW);
         delay(5);
         digitalWrite(light2,LOW);
         delay(5);
         digitalWrite(light1,LOW);
         delay(5);
          digitalWrite(led,LOW);
         delay(5);
             digitalWrite(hello,LOW);
         delay(5);
         sendAndroidValues("successfully turned off  all the device");
  led_f=0;
 light1_f=0;
 light2_f=0;
 light3_f=0;
 light4_f=0;
    }
    
    else if(readString =="home status"){
      if(led_f==0)
      {
        statuss+="ledoff ";
         statuss+=" ";
      }
       if(led_f==1)
      {
        statuss+="ledon";
        statuss+=" ";
      }
       if(light1_f==0)
      {
        statuss+="light1 off ";
         statuss+=" ";
      }
       if(light1_f==1)
      {
        statuss+="light1 on ";
         statuss+=" ";
      }
       if(light2_f==0)
      {
        statuss+="light2 off ";
         statuss+=" ";
      }
       if(light2_f==1)
      {
        statuss+="light2 on ";
         statuss+=" ";
      }
       if(light3_f==0)
      {
        statuss+="light3 off ";
         statuss+=" ";
      }
       if(light3_f==1)
      {
        statuss+="light3 on ";
         statuss+=" ";
      }
       if(light4_f==0)
      {
        statuss+="light4 off ";
         statuss+=" ";
      }
       if(light4_f==1)
      {
        statuss+="light4 on ";
         statuss+=" ";
      }
     sendAndroidValues(statuss);
     statuss=" ";
    }
    else if(readString=="led status"){
      if(led_f==0)
      {
        statuss+="ledoff ";
         statuss+=" ";
      }
       if(led_f==1)
      {
        statuss+="ledon";
        statuss+=" ";
      }
      sendAndroidValues(statuss);
      statuss=" ";
    }
       else if(readString=="light 1 status"){
       if(light1_f==0)
      {
        statuss+="light1 off ";
         statuss+=" ";
      }
       if(light1_f==1)
      {
        statuss+="light1 on ";
         statuss+=" ";
      }
      sendAndroidValues(statuss);
       statuss=" ";
    }
     else if(readString=="light 2 status"){
       if(light2_f==0)
      {
        statuss+="light2 off ";
         statuss+=" ";
      }
       if(light2_f==1)
      {
        statuss+="light2 on ";
         statuss+=" ";
      }
      sendAndroidValues(statuss);
       statuss=" ";
    }
     else if(readString=="light 3 status"){
       if(light3_f==0)
      {
        statuss+="light3 off ";
         statuss+=" ";
      }
       if(light3_f==1)
      {
        statuss+="light3 on ";
         statuss+=" ";
      }
      sendAndroidValues(statuss);
       statuss=" ";
    }
     else if(readString=="light 4 status"){
       if(light4_f==0)
      {
        statuss+="light4 off ";
         statuss+=" ";
      }
       if(light4_f==1)
      {
        statuss+="light4 on ";
         statuss+=" ";
      }
      sendAndroidValues(statuss);
       statuss=" ";
    }
    else if(readString=="friday are you listening"){
      sendAndroidValues("waiting for your commands sir");
      
    }
    
    else if (readString.length() >0) {
    sendAndroidValues("command is not valid please try again sir"); //prints string to serial port out

    readString=""; //clears variable for new input
  }
  statuss=" ";
  readString="";
  
  //delay by 2s. Meaning we will be sent values every 2s approx
  //also means that it can take up to 2 seconds to change LED state
  delay(2000);
}
 
//sends the values from the sensor over serial to BT module
void sendAndroidValues(String f)
 {
  //puts # before the values so our app knows what to do with the data
  Serial.print('#');
  Serial.print(f);
  Serial.print('~');
  Serial.println();
  f="";
  delay(10);        
  //added a delay to eliminate missed transmissions
}
 

